/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package wqa.form.config;

import java.awt.CardLayout;
import java.awt.Color;
import java.util.concurrent.TimeUnit;
import java.util.concurrent.locks.ReentrantLock;
import java.util.logging.Level;
import java.util.logging.Logger;
import wqa.system.WQAPlatform;

/**
 *
 * @author chejf
 */
public class ConfigForm extends javax.swing.JDialog{

    /**
     * Creates new form CommonDialog
     *
     * @param parent
     * @param modal
     * @param name
     */
    public ConfigForm(java.awt.Frame parent, boolean modal, String name) {
        super(parent, modal);

        initComponents();
        //居中显示
        setLocationRelativeTo(parent);

//        this.addWindowListener((WindowListener) this);
        this.setTitle(name);

        this.getContentPane().setBackground(new Color(34, 88, 149));

        this.setAlwaysOnTop(true);

        //初始化自动关闭窗口
        this.InitAutoClose();
    }

    protected void AddPane(javax.swing.JComponent pane) {
        this.WorkPane.setLayout(new CardLayout());
        this.WorkPane.add(pane);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Label_life = new javax.swing.JLabel();
        Label_Message = new javax.swing.JLabel();
        WorkPane = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                formMouseMoved(evt);
            }
        });

        Label_life.setText("jLabel1");

        javax.swing.GroupLayout WorkPaneLayout = new javax.swing.GroupLayout(WorkPane);
        WorkPane.setLayout(WorkPaneLayout);
        WorkPaneLayout.setHorizontalGroup(
            WorkPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        WorkPaneLayout.setVerticalGroup(
            WorkPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 379, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(Label_Message, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(Label_life, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(WorkPane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(WorkPane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Label_life, javax.swing.GroupLayout.DEFAULT_SIZE, 25, Short.MAX_VALUE)
                    .addComponent(Label_Message, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // <editor-fold defaultstate="collapsed" desc="自动关闭"> 
    private final ReentrantLock time_lock = new ReentrantLock(true);
    private final int max_liftime = 1800;
    private int life_time = max_liftime;

    private void InitAutoClose() {

        WQAPlatform.GetInstance().GetThreadPool().submit(() -> {
            Label_life.setText("");
            while (life_time > -3) {
                try {
                    //检查窗体活性
                    CheckForm();
                    //检查提示信息过期
                    CheckMessage();
                    TimeUnit.SECONDS.sleep(1);
                } catch (InterruptedException ex) {
                    Logger.getLogger(ConfigForm.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    //检查窗口活性
    private void CheckForm() {
        time_lock.lock();
        try {
            life_time--;
            if (life_time < 10) {
                this.Label_life.setText("还有" + life_time + "秒关闭窗口");
            }

            if (life_time == 0) {
                Close();
            }
        } finally {
            time_lock.unlock();
        }
    }

    public void Close() {
        if (life_time >= -1) {
            life_time = -10;
            this.dispose();
        }
    }

    private void formMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseMoved
        this.time_lock.lock();
        try {
            if (this.life_time < max_liftime / 2) {
                this.life_time = max_liftime;
                this.Label_life.setText("");
            }
        } finally {
            time_lock.unlock();
        }
    }//GEN-LAST:event_formMouseMoved
    // </editor-fold>  

    // <editor-fold defaultstate="collapsed" desc="提示信息"> 
    private final ReentrantLock text_lock = new ReentrantLock(true);
    private final int max_texttime = 10;
    private int text_time = max_texttime;

    private void CheckMessage() {
        if (this.text_time > 0) {
            this.text_lock.lock();
            try {
                if (this.text_time-- < 2) {
                    Label_Message.setText("");
                }
            } finally {
                this.text_lock.unlock();
            }
        }
    }

    protected void SetConfigText(String message) {
        this.text_lock.lock();
        try {
            this.text_time = max_texttime;
            Label_Message.setText(message);
            Label_Message.updateUI();
        } finally {
            this.text_lock.unlock();
        }
    }
    // </editor-fold>  

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Label_Message;
    private javax.swing.JLabel Label_life;
    private javax.swing.JPanel WorkPane;
    // End of variables declaration//GEN-END:variables

}
